//REVERSE CONCEPT
#include <stdio.h>

int main(){
    int n=5;
    int arr[5]={11,12,13,14,15};
    for(int i=n-1;i>=0;i--)
    printf("%d\n",arr[i]);
}


// USING SCANF
#include <stdio.h>
int main(){
    int n;
    scanf("%d",&n);
    int arr[n];
    for(int i=0;i<n;i++)
    {
        scanf("%d",&arr[i]);
    }
    for(int i=n-1;i>=0;i--)
    {
    printf("%d\t",arr[i]);
    }
return 0;
}

//SUM OF AN ARRAY
#include <stdio.h>    
int main()    
{    
    
    int arr[] = {51, 52, 53, 54, 55};     
    int sum = 0;    
            
   
    
    for (int i = 0;i<5; i++)
    {     
       sum = sum + arr[i];    
    }      
    printf("Sum of all the elements of an array: %d", sum);    
    return 0;    
}    


//PROGRAM TO CALCULATE AVERAGE OF AN ARRAYS

#include <stdio.h>
int main() {
    int n, i;
    float num[100], sum = 0.0, avg;

    printf("Enter the numbers of elements: ");
    scanf("%d", &n);

   
    for (i = 0; i < n; ++i) {
        printf("%d. Enter number: ", i + 1);
        scanf("%f", &num[i]);
        sum += num[i];
    }

    avg = sum / n;
    printf("Average = %.2f", avg);
    return 0;
}

// easy method to calculate average
#include <stdio.h>
int main() {
    int arr[5]={1,2,3,4,5};
    int sum=0;
    int avg=0;
    for (int i = 0; i < 5; i++)
    {
        sum =sum+arr[i];
    }
    avg = sum /5;
    printf("Average = %d", avg);
    return 0;
}

//search an element in an array
#include<stdio.h>
int main()
{
    int arr[5] = {34, 2, 23, 100, 60};
    int key,i,search = 0;

    printf("Enter element to search\n");
    scanf("%d",&key);

   

    for(i = 0; i <5; i++)
    {
        if(arr[i] == key)
        {
            search = 1;
            break;
        }
    }

    if(search == 1)
        printf("Search Found\n");
    else
        printf("Search Not Found\n");

    return 0;
}

//PRINT ELEMENTS IN ARRAY USING WHILE LOOP
  #include <stdio.h>

    int main()
    {
        int arr[10] = {54, 27, 15, 6, 47, 134, 69, 153, 3, 51};
        int i = 0;
        while (i < 10)
        {
            printf("%d ", arr[i]);
            i++;
        }

        return 0;
    }

//find maximum element in a given array

#include<stdio.h>
int main()
{
  int arr[5]={21,48,46,811,105};
  int max= arr[0];      
  for (int i = 0; i <5; i++)
  {
     if(arr[i] > max)   
      max = arr[i];
  }
   printf("maximum value of given array: %d\n", max);   
  return 0;      
}


//find minimum element in a given array
#include <stdio.h>    
     
int main()    
{    
    int arr[5] = {25, 1,17, 75, 6};      
     
   
    int min = arr[0];    
        
      
    for (int i = 0; i <5; i++)
    {     
       if(arr[i] < min)    
           min = arr[i];    
    }      
    printf("Smallest element present in given array: %d\n", min);    
    return 0;    
}

//PROGRAM TO PRINT BOTH MIN AND MAX 
#include <stdio.h>    
     
int main()    
{    
    int arr[5] = {25, 1,17, 75, 6};      
     
   
    int min = arr[0];  
    int max=arr[0];
        
      
    for (int i = 0; i <5; i++)
    {     
       if(arr[i] < min)    
           min = arr[i];    
    }      
    for (int i=0;i<5;i++)
    {
        if(arr[i] >max)
        max=arr[i];
    }
    printf("Smallest element present in given array: %d\n", min);
    printf("Largest element present in given array:%d\n",max);
    return 0;    
}


//ANOTHER METHOD
//find the maximum element in an given array:

#include<stdio.h>
int main()
{
 int a[5]={27,497,63,25,356};
 int max=a[0];
 int min=a[0];
  for (int i = 0; i<5; i++)
  {
    if(a[i] > max)
  {
    max= a[i];
  }
    if(a[i] < min)
  {
    min= a[i];
}
}
  printf("largest element present in given array: %d\n", max);
  printf("smallest element present in given array: %d\n",min);
 return 0;
}

//INDEX OF AN ELEMENT IN AN ARRAY

#include <stdio.h>
 
int main() {
    int arr[10] = {2, 4, 16, 8, 10,56,45,100,5,452};
    int x = 56;       
    int index = -1;    
    for (int i = 0; i <10 ; i++)
    {
        if (arr[i] == x) {
            index = i;
            break;
        }
    }     
    if (index > -1) {
        printf("Index : %d\n", index);
    }      
    return 0;
}





